import logging
import random

from aiogram import Router

from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.fsm.state import StatesGroup, State

import numpy as np

from database import add_player, get_player, update_player

import plants_rpg.keybords as kb


logging.basicConfig(level=logging.DEBUG)
router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Ä–ø–≥ –ø—Ä–æ –æ–≥–æ—Ä–æ–¥–Ω–∏–∫–∞, –¥–µ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞ –±—É–¥–µ –≤–∏–∂–∏—Ç–∏ —è–∫ –º–æ–∂–Ω–∞ –±—ñ–ª—å—à–µ, –ø–∏—à–∏ /game —â–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É")

@router.message(Command('game'))
async def game_start(message: Message):
    user_id = message.from_user.id
    add_player(user_id)
    await message.reply("–¢–∏ –ø–æ—á–∏–Ω–∞—î—à –≥—Ä—É –∑ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—î—é 3—Ö3 –∫–ª—ñ—Ç–∏–Ω–∫–∏, –Ω–∞ –∫–æ–∂–Ω—ñ–π –∑–∞—Ä–∞–∑ —Ä–æ—Å—Ç–µ –∫–∞—Ä—Ç–æ–ø–ª—è —è–∫–∞ –≤–∏—Ä–æ—Å—Ç–µ —á–µ—Ä–µ–∑ 10 —ñ–≥—Ä–æ–≤–∏—Ö –¥–Ω—ñ–≤.\n\n"
                        "–ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É '–ü–æ–¥—ñ—è' —â–æ–± —Å—Ç–∞–ª–∞—Å—å —è–∫–∞—Å—å –ø–æ–¥—ñ—è", reply_markup=kb.event)


event = {'calm weather': 'üå§–°–ø–æ–∫—ñ–π–Ω–∞, —Ç–µ–ø–ª–∞ –ø–æ–≥–æ–¥–∞. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C', 'rain': 'üåß–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –¥–æ—â. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å +hum% –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ',
         'sparrow attack': 'ü¶§–ù–∞–ª—ñ—Ç –≥–æ—Ä–æ–±—Ü—ñ–≤. –í–æ–Ω–∏ —ó–¥—è—Ç—å –≤–∞—à—ñ –ø–ª–æ–¥–∏, –≤–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ lost% –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –ø–ª–æ–¥—ñ–≤, –∞–ª–µ —ñ 30% —à–∫—ñ–¥–Ω–∏–∫—ñ–≤ —Ç–µ–∂ –ø–æ–º–µ—Ä–ª–∏',
         'heat': '‚òÄÔ∏è–°–ø–µ–∫–∞! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C', 'cold': 'üå¨–ê—Ä–∫—Ç–∏—á–Ω—ñ –≤—ñ—Ç—Ä–∏! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è –∑–Ω–∏–∂—É—î—Ç—å—Å—è –¥–æ temp¬∞C',
         'pit': 'üï≥–í–∏ –∑–Ω–∞–π—à–ª–∏ —è–º—É! –í–∏ —á—ñ—Ç–∫–æ –ø–∞–º\'—è—Ç–∞—î—Ç–µ —â–æ —Ä–∞–Ω—ñ—à–µ —ó—ó —Ç—É—Ç –Ω–µ –±—É–ª–æ. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞'}


max_need_humidity = 90 #%
avg_need_humidity = 45

min_need_temperature = 8 #¬∞C
max_need_temperature = 30
avg_need_temperature = 19

def end_game(player):
    player["humidity"] = 45
    player["temperature"] = 19
    player["cell_fruits"] = 10
    player["size_cell"] = np.array([[10, 10, 10], [10, 10, 10], [10, 10, 10]])
    player["fruits"] = 0
    player["day"] = 1
    player["day_humidity"] = 0
    player["day_temperature"] = 0

    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"]
    )

def save_player(player):
    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"]
    )

@router.callback_query(lambda c: c.data == 'pick_event' or c.data == "next_day")
async def start_event(callback_query: CallbackQuery):
    await callback_query.answer()
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)


    random_event = random.choice(list(event.keys()))

    if random_event == "calm weather":
        temp = random.randint(14, 24)
        text = event[random_event].replace("temp", str(temp))
        player["temperature"] = temp

    elif random_event == 'rain':
        hum = random.randint(10, 30)
        text = event[random_event].replace("hum", str(hum))
        player["humidity"] += hum

    elif random_event == 'sparrow attack':
        lost = random.randint(10, 30)
        text = event[random_event].replace("lost", str(lost))
        if player["temperature"] < avg_need_temperature:
            player["temperature"] += 1
        elif player["temperature"] > avg_need_temperature:
            player["temperature"] -= 1
        player["cell_fruits"] -= player["cell_fruits"] / 100 * lost
        player["cell_fruits"] = round(player["cell_fruits"], 2)

    elif random_event == 'heat':
        temp = random.randint(30, 40)
        text = event[random_event].replace("temp", str(temp))
        player["humidity"] = temp

    elif random_event == "cold":
        temp = random.randint(0, 8)
        text = event[random_event].replace("temp", str(temp))
        player["humidity"] = temp

    elif random_event == 'pit':
        text = event[random_event]
        rows, cols = player["size_cell"].shape
        rand_row = random.randint(0, rows - 1)
        rand_col = random.randint(0, cols - 1)
        player["size_cell"][rand_row, rand_col] = -10

        if player["temperature"] < avg_need_temperature:
            player["temperature"] += 1
        elif player["temperature"] > avg_need_temperature:
            player["temperature"] -= 1
    else:
        text = '–ü–æ–º–∏–ª–∫–∞: –ñ–æ–¥–Ω–æ—ó –ø–æ–¥—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

    consequences = ''
    if player["humidity"] > max_need_humidity:
        player["size_cell"] += 3
        text += '\nüíß–ó–∞—Å—Ç—ñ–π –≤–æ–¥–∏! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 3 –¥–Ω—ñ –¥–æ–≤—à–µ'
        player["day_humidity"] += 1
    elif player["day_humidity"] > 0 and player["humidity"] > 0:
        player["day_humidity"] = 0
    if player["humidity"] <= 0:
        text += '\nüí•–ó–∞—Å—É—Ö–∞! –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É 0%. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 2 –¥–Ω—ñ –¥–æ–≤—à–µ'
        player["size_cell"] += 2
        player["day_humidity"] += 1

    elif player["day_humidity"] > 0 and 0 < player["humidity"] < max_need_humidity:
        player["day_humidity"] = 0

    if player["temperature"] >= max_need_temperature:
        text += '\n‚òÄÔ∏è–°–ø–µ–∫–∞! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 40% –ø–ª–æ–¥—ñ–≤. –í–æ–ª–æ–≥—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–∞—î—Ç—å—Å—è –≤–¥–≤—ñ—á—ñ —à–≤–∏–¥—à–µ'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 40
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["humidity"] -= 10
        player["day_temperature"] += 0

    elif player["day_temperature"] > 0 and player["temperature"] > 0:
        player["day_temperature"] = 0

    if player["temperature"] <= min_need_temperature:
        text += '\n‚ùÑÔ∏è–ó–∞–º–æ—Ä–æ–∑–∫–∏! –ó–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 20% –ø–ª–æ–¥—ñ–≤'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 20
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["day_temperature"] += 0

    elif player["day_temperature"] > 0 and 8 < player["temperature"] < player["max_need_temperature"]:
        player["day_temperature"] = 0

    if player["day_temperature"] == 3 or player["day_humidity"] == 3:
        await callback_query.message.edit_text('–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.')
        end_game(player)
        return

    save_player(player)


    await callback_query.message.edit_text(f'{text}.\n–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏: {player["cell_fruits"]}, –≤–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player["humidity"]}%, '
                                        f'—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C\n{player["size_cell"]}\n{consequences}\n'
                                        f'–û–±–µ—Ä–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥–ª—è —Å–≤–æ–≥–æ –≥–æ—Ä–æ–¥—É.', reply_markup=kb.upgrade)

@router.callback_query(lambda c: c.data == 'Expansion')
async def Expansion(callback_query: CallbackQuery):
    await callback_query.answer()

    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    player["size_cell"] -= 1

    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    rand_num = random.randint(1, 40)
    if rand_num == 1 or rand_num == 2:
        app = 'üï≥–ü—ñ–¥ —á–∞—Å –≤–∏–∫–æ–ø—É–≤–∞–Ω–Ω—è —è–º–æ–∫ –≤–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –≤ –ø–µ—á–µ—Ä—É. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–∞–º–∞–≥–∞—é—á–∏—Å—å –≤–∏–±—Ä–∞—Ç–∏—Å—å –∑ –Ω–µ—ó. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞'
        new_row = np.array([[10, 10, -10]])
        player["humidity"] -= 10
        player["size_cell"] += 1
    elif rand_num == 3:
        app = 'ü™®–í–∏ —Ä–æ–∑—É–º—ñ—î—Ç–µ —â–æ –Ω–∞ —Ü—ñ–π —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –±–∞–≥–∞—Ç–æ –∫–∞–º—ñ–Ω–Ω—è. –ö—É–ª—å—Ç—É—Ä–∏ –±—É–¥—É—Ç—å —Ä–æ—Å—Ç–∏ –¥–æ–≤—à–µ'
        new_row = np.array([[15, 15, 15]])
    else:
        new_row = np.array([[10, 10, 10]])
        app = ''


    player["size_cell"] = np.vstack([player["size_cell"], new_row])
    player["humidity"] -= 10

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'{app}\n'
                                           f'–¢–≤—ñ–π –≥–æ—Ä–æ–¥ –∑–±—ñ–ª—å—à–µ–Ω–æ –¥–æ \n{player["size_cell"]}\n'
                                        f'–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ, –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%, '
                                        f'—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C, –∑ –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤. '
                                           f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: {player["day_temperature"]}. '
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: {player["day_humidity"]}', reply_markup=kb.next_day)

@router.callback_query(lambda c: c.data == 'Fertilization')
async def Fertilization(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    player["size_cell"] -= 1
    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    player["cell_fruits"] += 1
    player["cell_fruits"] = round(player["cell_fruits"])
    player["humidity"] -= 10

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥. –¢–µ–ø–µ—Ä –∑ –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                        f'–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ, –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%, '
                                        f'—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C, –≤–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}, '
                                           f'—Ä–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å \n{player["size_cell"]}.\n'
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: {player["day_temperature"]}. '
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: {player["day_humidity"]}', reply_markup=kb.next_day)

@router.callback_query(lambda c: c.data == 'Watering')
async def Watering(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    player["size_cell"] -= 1
    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    player["humidity"] += 30
    player["humidity"] -= 10

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'–¢–∏ –ø–æ–ª–∏–≤ –æ–≥–æ—Ä–æ–¥. –¢–µ–ø–µ—Ä –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%.\n'
                                        f'–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ, '
                                        f'—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C, –∑ –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤,'
                                           f' —Ä–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É: \n{player["size_cell"]}.\n'
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: {player["day_temperature"]}. '
                                           f'–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: {player["day_humidity"]}',
                                           reply_markup=kb.next_day)

