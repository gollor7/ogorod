import logging
import random
import asyncio

from math import isqrt

from aiogram import Router

from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

import numpy as np

from database import add_player, get_player, update_player

import plants_rpg.keybords as kb

from aiogram.enums import ParseMode

logging.basicConfig(level=logging.DEBUG)
router = Router()

edit_lock = asyncio.Lock()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Ä–ø–≥ –ø—Ä–æ –æ–≥–æ—Ä–æ–¥–Ω–∏–∫–∞, –¥–µ –≤–∞–º —Ç—Ä–µ–±–∞ –±—É–¥–µ –≤–∏–∂–∏–≤–∞—Ç–∏ —è–∫ –º–æ–∂–Ω–∞ –¥–æ–≤—à–µ. –ö–æ–º–∞–Ω–¥–∞ /guide —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏,"
                        "—Ç–∞ —Ä—ñ–∑–Ω—ñ –¥–µ—Ç–∞–ª—ñ, —è–∫—â–æ –≥—Ä–∞—î—Ç–µ –≤–ø–µ—Ä—à–µ —Ç–æ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –¥–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—è. /game —â–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É")

@router.message(Command('game'))
async def game_start(message: Message):
    user_id = message.from_user.id
    add_player(user_id)
    await message.reply("–¢–∏ –ø–æ—á–∏–Ω–∞—î—à –≥—Ä—É –∑ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—î—é 3—Ö3 –∫–ª—ñ—Ç–∏–Ω–∫–∏, –Ω–∞ –∫–æ–∂–Ω—ñ–π –∑–∞—Ä–∞–∑ —Ä–æ—Å—Ç–µ –∫–∞—Ä—Ç–æ–ø–ª—è —è–∫–∞ –≤–∏—Ä–æ—Å—Ç–µ —á–µ—Ä–µ–∑ 10 —ñ–≥—Ä–æ–≤–∏—Ö –¥–Ω—ñ–≤.\n\n"
                        "–ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É '–ü–æ–¥—ñ—è' —â–æ–± —Å—Ç–∞–ª–∞—Å—å —è–∫–∞—Å—å –ø–æ–¥—ñ—è", reply_markup=kb.event)

@router.message(Command('guide'))
async def game_start(message: Message):
    await message.reply('–ì–∞–π–¥ –ø–æ –≥—Ä—ñ:\n\n–Ü–≥—Ä–æ–≤–µ –ø–æ–ª–µ\n<blockquote expandable>–ù–∞ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏ –≤–∞—à–µ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ –≤–∏–≥–ª—è–¥–∞—î –Ω–∞—Å—Ç—É–ø–Ω–∏–º —á–∏–Ω–æ–º\n'
                        '[[10 10 10]\n[10 10 10]\n[10 10 10]]\n–¶–∏—Ñ—Ä–∏ –ø–æ–∑–Ω–∞—á–∞—é—Ç—å —á–µ—Ä–µ–∑ —Å–∫—ñ–ª—å–∫–∏ —ñ–≥—Ä–æ–≤–∏—Ö –¥–Ω—ñ–≤ –≤–∏—Ä–æ—Å—Ç–µ –≤—Ä–æ–∂–∞–π, –∫–æ–ª–∏ —Ü–∏—Ñ—Ä–∞ —Å—Ç–∞—î 0, '
                        '–≤—Ä–æ–∂–∞–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–∏—Ä–∞—î—Ç—å—Å—è —Ç–∞ —Ü–∏—Ñ—Ä–∞ –∑–Ω–æ–≤—É —Å—Ç–∞—î 10. –ü—Ä–∏ –¥–µ—è–∫–∏—Ö –ø–æ–¥—ñ—è—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ <b>–Ø–º–∞</b> —Ü–∏—Ñ—Ä–∞ –º–æ–∂–µ —Å—Ç–∞—Ç–∏ –º–µ–Ω—à–µ 0. '
                        '–¶–µ –æ–∑–Ω–∞—á–∞—î —â–æ –Ω–∞ —Ü—ñ–π –∫–ª—ñ—Ç–∏–Ω—Ü—ñ —è–º–∞ —Ç–∞ —Ç—É—Ç –≤–∂–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–º–æ–∂–µ —Ä–æ—Å—Ç–∏.</blockquote>\n\n'
                        '–ü–æ—Ä–∞–∑–∫–∞\n<blockquote expandable>–í–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞—Ç–∏ —á–µ—Ä–µ–∑ –¥–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–∏. –ü–µ—Ä—à–∏–π - <b>–æ—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ</b>. –Ø–∫—â–æ —É –≤–∞—Å –±—É–¥–µ 3 –æ—á–∫–∞ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ, '
                        '—Ç–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å, —è–∫—â–æ –≤–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–µ —Å–∏—Ç—É–∞—Ü—ñ—é –≤–∏ –ø—Ä–æ–≥—Ä–∞—î—Ç–µ. –û—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –Ω–∞–±–∏—Ä–∞—é—Ç—å—Å—è –∑–∞ —É–º–æ–≤–∏ —â–æ % –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –º–µ–Ω—à–∏–π –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 0, –∞–±–æ '
                        '—è–∫—â–æ % –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –±—ñ–ª—å—à–∏–π –∑–∞ 100%. –û—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –æ–±–Ω—É–ª—è—é—Ç—å—Å—è —è–∫—â–æ % –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –±—É–¥–µ –±—ñ–ª—å—à–∏–π –∑–∞ 0% —Ç–∞ –º–µ–Ω—à–∏–π –∑–∞ 100% —Ö–æ—á–∞ –± –Ω–∞ –¥–µ–Ω—å. '
                        '–î—Ä—É–≥–∏–π —Ñ–∞–∫—Ç–æ—Ä - <b>–û—á–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏</b>. –Ø–∫—â–æ —É –≤–∞—Å –±—É–¥–µ 3 –æ—á–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏, —Ç–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å, —è–∫—â–æ –≤–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–µ —Å–∏—Ç—É–∞—Ü—ñ—é –≤–∏ –ø—Ä–æ–≥—Ä–∞—î—Ç–µ. '
                        '–û—á–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ –Ω–∞–±–∏—Ä–∞—é—Ç—å—Å—è –∑–∞ —É–º–æ–≤–∏ —â–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –±—É–¥–µ –±—ñ–ª—å—à–æ—é –∑–∞ 30¬∞C, –∞–±–æ –º–µ–Ω—à–æ—é –∑–∞ 0¬∞C <span class="tg-spoiler">'
                        '(–ó —Ç–µ–ø–ª–∏—Ü–µ—é –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –¥–æ -7¬∞C).</span></blockquote>\n\n'
                        '–ü–æ—á–∞—Ç–∫–æ–≤—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n<blockquote expandable>–Ñ –¥–≤–∞ —Ç–∏–ø–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: –ó–º—ñ–Ω–Ω—ñ —Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏. –ó–º—ñ–Ω–Ω—ñ: <b>–í–æ–ª–æ–≥—ñ—Å—Ç—å</b>\n'
                        '–í–∏ –ø–æ—á–∏–Ω–∞—î—Ç–µ –≥—Ä—É –∑ 45% –≤–æ–ª–æ–≥–æ—Å—Ç—ñ, –Ω–∞–ø—Ä–∏–∫—ñ–Ω—Ü—ñ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –≤–æ–ª–æ–≥—ñ—Å—Ç—å –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –Ω–∞ 10% <span class="tg-spoiler">'
                        '(–ü—Ä–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–µ–ø–ª–∏—Ü—ñ –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –Ω–∞ 5%).</span> –ù–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –≤–ø–ª–∏–≤–∞—é—Ç—å –¥–µ—è–∫—ñ <b>–ü–æ–¥—ñ—ó</b>, —Ç–∞–∫—ñ —è–∫ <b>–î–æ—â</b>, <b>–ö–∏—Å–ª–æ—Ç–Ω–∏–π –¥–æ—â</b>, '
                        '<b>–°–ø–µ–∫–∞</b>, —ñ —Ç.–¥. –ê —Ç–∞–∫–æ–∂ –¥—ñ—è <b>–ü–æ–ª–∏–≤–∞–Ω–Ω—è</b> –¥–æ–¥–∞—î –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ 30%, –∞ <b>–ü—ñ–¥–≥–æ—Ä—Ç–∞–Ω–Ω—è</b> –Ω–∞–≤–ø–∞–∫–∏ –∑–º–µ–Ω—à—É—î –Ω–∞ 10%. '
                        '\n<b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</b>\n–í–∏ –ø–æ—á–∏–Ω–∞—î—Ç–µ –≥—Ä—É –∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ—é 19¬∞C. –ù–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤–ø–ª–∏–≤–∞—é—Ç—å –ø–æ–¥—ñ—ó –ø–æ–≥–æ–¥–∏, —Ç–∞–∫–æ–∂ –ø–æ–¥—ñ—è <b>–ü–æ–∂–µ–∂–∞</b> –Ω–∞–∫–ª–∞–¥–∞—î —Å—Ç–∞–Ω '
                        '<b>–ì–æ—Ä—ñ–Ω–Ω—è</b> —è–∫–∏–π –∫–æ–∂–µ–Ω —Ö—ñ–¥ –∑–±—ñ–ª—å—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≤–∞—à–æ–≥–æ –¥–Ω—è. –¢–∞–∫–æ–∂ <b>–ü–æ–ª–∏–≤–∞–Ω–Ω—è</b> –∑–º–µ–Ω—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ 5¬∞C, '
                        '–∞ <b>–ü—ñ–¥–≥–æ—Ä—Ç–∞–Ω–Ω—è</b> –Ω–∞–≤–ø–∞–∫–∏ –∑–±—ñ–ª—å—à—É—î –Ω–∞ 7¬∞C. –¢–∞–∫–æ–∂ —ñ–Ω–æ–¥—ñ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–∞–º–∞ –ø–æ —Å–æ–±—ñ –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –∞–±–æ –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –¥–æ 19¬∞C.</blockquote>\n\n'
                        '–ü–æ–¥—ñ—ó\n<blockquote expandable>'
                        , parse_mode=ParseMode.HTML)


event = {'calm weather': 'üå§–°–ø–æ–∫—ñ–π–Ω–∞, —Ç–µ–ø–ª–∞ –ø–æ–≥–æ–¥–∞. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C.', 'rain': 'üå¶–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –¥–æ—â. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å +hum% –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ.',
         'sparrow attack': 'ü¶§–ù–∞–ª—ñ—Ç –≥–æ—Ä–æ–±—Ü—ñ–≤. –í–æ–Ω–∏ —ó–¥—è—Ç—å –≤–∞—à—ñ –ø–ª–æ–¥–∏, –≤–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ lost% –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –ø–ª–æ–¥—ñ–≤, –∞–ª–µ —ñ 30% —à–∫—ñ–¥–Ω–∏–∫—ñ–≤ —Ç–µ–∂ –ø–æ–º–µ—Ä–ª–∏.',
         'heat': '‚òÄÔ∏è–ü–∞–ª—é—á–µ —Å–æ–Ω—Ü–µ! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C.', 'cold': 'üå¨–ê—Ä–∫—Ç–∏—á–Ω—ñ –≤—ñ—Ç—Ä–∏! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è –∑–Ω–∏–∂—É—î—Ç—å—Å—è –¥–æ temp¬∞C.',
         'pit': 'üï≥–í–∏ –∑–Ω–∞–π—à–ª–∏ —è–º—É! –í–∏ —á—ñ—Ç–∫–æ –ø–∞–º\'—è—Ç–∞—î—Ç–µ —â–æ —Ä–∞–Ω—ñ—à–µ —ó—ó —Ç—É—Ç –Ω–µ –±—É–ª–æ. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞.',
         'cooling fertilizer': '‚ùÑÔ∏èüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ –æ—Ö–æ–ª–æ–¥–∂—É–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–º–µ–Ω—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 10¬∞C.',
         'warming fertilizer': '‚òÄÔ∏èüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ —É—Ç–µ–ø–ª—é–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±—ñ–ª—å—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 10¬∞C.',
         'moisturizing fertilizer': 'üíßüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ –∑–≤–æ–ª–æ–∂—É—é—á–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±—ñ–ª—å—à—É—î –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É –Ω–∞ 15%.',
         'dry fertilizer': 'üåæüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ —Å—É—Ö–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–º–µ–Ω—à—É—î –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É –Ω–∞ 15%.',
         'toxic rain': '‚ò¢Ô∏èüåß–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∫–∏—Å–ª–æ—Ç–Ω–∏–π –¥–æ—â. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å –¥–µ–±–∞—Ñ <b>–¢–æ–∫—Å–∏–Ω</b>.', 'merchant':
         'üë®‚Äçüåæ–ü—Ä–∏–π—à–æ–≤ –º–∞–Ω–¥—Ä—ñ–≤–Ω–∏–π —Ç–æ—Ä–≥–æ–≤–µ—Ü—å. –í—ñ–Ω –ø—Ä–æ–ø–æ–Ω—É—î —Ä—ñ–∑–Ω—ñ —Ç–æ–≤–∞—Ä–∏, –∞ —Ç–∞–∫–æ–∂ –¥–µ—Ç–∞–ª—ñ –¥–ª—è –¥–∏–≤–æ–≤–∏–∂–Ω–æ—ó —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –∑ –¥–∞–ª–µ–∫–∏—Ö –∑–µ–º–µ–ª—å - —Ç–µ–ø–ª–∏—Ü—ñ.',
         'rainstorm': 'üåß–í–∏ –±–∞—á–∏—Ç–µ —è–∫ –Ω–∞–¥ –≤–∞–º–∏ –∑–≥—É—â–∞—é—Ç—å—Å—è —Ö–º–∞—Ä–∏... –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑–ª–∏–≤–∞. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å +hum% –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ —Ç–∞ -temp¬∞C –¥–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏.', 'earthquake':
         'üåã–í–∏ –≤—ñ–¥—á—É–≤–∞—î—Ç–µ —è–∫ –∑–µ–º–ª—è –ø—ñ–¥ –≤–∞–º–∏ –ø–æ—á–∏–Ω–∞—î —Ç—Ä—è—Å—Ç–∏—Å—å, –Ω–∞–≤—Ä—è–¥ —á–∏ —Ü–µ –ø—ñ–¥–µ –Ω–∞ –∫–æ—Ä–∏—Å—Ç—å —Ä–æ—Å–ª–∏–Ω–∞–º–∏.',
         'fire': 'üî•–í–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –≥–æ—Ä–æ–¥—É –π–¥–µ –¥–∏–º, –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –ø–æ–∂–µ–∂–∞. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å –¥–µ–±–∞—Ñ <b>–ì–æ—Ä—ñ–Ω–Ω—è</b>.',
         'rainbow': 'üåà–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞ –ø–æ–≥–æ–¥–∞! –†–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å –µ—Ñ–µ–∫—Ç <b>–ü–ª–æ–¥—é—á—ñ—Å—Ç—å</b> –Ω–∞ 3 –¥–Ω—ñ. '
                    '–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ 2 –∫–æ–∂–µ–Ω –¥–µ–Ω—å. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞—î 19 –≥—Ä–∞–¥—É—Å—ñ–≤, –≤–æ–ª–æ–≥—ñ—Å—Ç—å 50%',
         'Late blight':
             'ü¶†‚ö´Ô∏è–ó–∞–≥–ª—è–¥–∞—é—á–∏ –ø—ñ–¥ –ª–∏—Å—Ç—è –æ–¥–Ω—ñ—î—ó –∑ —Ä–æ—Å–ª–∏–Ω –≤–∏ –ø–æ–º—ñ—á–∞—î—Ç–µ —Ç–µ–º–Ω—ñ –ø–ª—è–º–∏ –Ω–∞ –ª–∏—Å—Ç—ñ. –í–∞—à–∞ –∫–∞—Ä—Ç–æ–ø–ª—è –∑–∞—Ä–∞–∂–µ–Ω–∞ <b>–¢–µ–º–Ω–æ—é –ø–ª—ñ—Å–Ω—è–≤–æ—é</b> –Ω–∞ –• –¥–Ω—ñ–≤. –†—ñ—Å—Ç —Ä–æ—Å–ª–∏–Ω –∑—É–ø–∏–Ω–µ–Ω–æ',
         'Silver scab':'ü¶†ü™ô–í–∏ –ø–æ–º—ñ—á–∞—î—Ç–µ —â–æ –≤–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –≤—Ç—Ä–∞—á–∞—é—Ç—å –≤–æ–ª–æ–≥—É —à–≤–∏–¥—à–µ, –Ω—ñ–∂ –∑–∞–∑–≤–∏—á–∞–π. –û–≥–ª—è–¥–∞—é—á–∏ —Å—Ç–µ–±–ª–∞, –≤–∏ —Ä–æ–∑—É–º—ñ—î—Ç–µ —â–æ –≤–µ—Å—å –≥–æ—Ä–æ–¥ –∑–∞—Ä–∞–∂–µ–Ω–∏–π <b>–°—Ä—ñ–±–Ω–æ—é –ø–∞—Ä—à–æ—é</b>',
         'Pandora\'s box': 'üì¶–í –æ–¥–Ω–æ–º—É –∑ –º—ñ—à–∫—ñ–≤ –≤–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ –¥–∏–≤–Ω—É –∫–æ—Ä–æ–±–æ—á–∫—É. –í–∏ –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç–µ —ó—ó, —Ç–∞ —Ä–æ–∑—É–º—ñ—î—Ç–µ —â–æ —Ü–µ <b>–°–∫—Ä–∏–Ω—å–∫–∞ –ø–∞–Ω–¥–æ—Ä–∏</b>! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä—ñ–∑–∫–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –¥–æ '
                           'temp¬∞C, –≤–æ–ª–æ–≥—ñ—Å—Ç—å —Å—Ç–∞—î hum%, —Ç–∞ –≤–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ —Å—Ç–∞—Ç—É—Å status! –ù–∞ day dnya.'}

status_effect = ['toxic_time', 'fire_time', 'fertility_time', 'late_blight_time', 'silver_scab_time']


max_need_humidity = 90 #%
avg_need_humidity = 45

max_need_temperature = 30
avg_need_temperature = 19

def end_game(player):
    player["humidity"] = 45
    player["temperature"] = 19
    player["cell_fruits"] = 10
    player["size_cell"] = np.array([[10, 10, 10], [10, 10, 10], [10, 10, 10]])
    player["fruits"] = 0
    player["day"] = 1
    player["day_humidity"] = 0
    player["day_temperature"] = 0
    player["fertilizer_baff"] = "standart"
    player["toxic_time"] = 0
    player["a_hum"] = 0
    player['greenhouse_counter'] = 0
    player["min_need_temperature"] = 8
    player['minus_hum'] = 10
    player['goods_details'] = {
        "–¢–∫–∞–Ω–∏–Ω–∞": "trade_greenhouse_fabric",
        "–í–µ–Ω—Ç–∏–ª—è—Ü—ñ—è": "trade_greenhouse_ventilation",
        "–î–µ—Ä–µ–≤–∏–Ω–∞": "trade_greenhouse_wood"
    }
    player["fire_time"] = 0
    player["fertility_time"] = 0
    player['god_blessing_time'] = 0
    player['late_blight_time'] = 0
    player['silver_scab_time'] = 0

    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"],
        fertilizer_baff=player["fertilizer_baff"],
        toxic_time=player["toxic_time"],
        a_hum=player["a_hum"],
        greenhouse_counter=player["greenhouse_counter"],
        min_need_temperature=player["min_need_temperature"],
        minus_hum=player["minus_hum"],
        goods_details=player['goods_details'],
        fire_time=player['fire_time'],
        fertility_time=player['fertility_time'],
        god_blessing_time=player['god_blessing_time'],
        late_blight_time=player['late_blight_time'],
        silver_scab_time=player['silver_scab_time']
    )

def save_player(player):
    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"],
        fertilizer_baff=player["fertilizer_baff"],
        toxic_time=player["toxic_time"],
        a_hum=player["a_hum"],
        greenhouse_counter=player["greenhouse_counter"],
        min_need_temperature=player["min_need_temperature"],
        minus_hum=player["minus_hum"],
        goods_details=player['goods_details'],
        fire_time=player['fire_time'],
        fertility_time=player['fertility_time'],
        god_blessing_time=player['god_blessing_time'],
        late_blight_time=player['late_blight_time'],
        silver_scab_time=player['silver_scab_time']
    )

def check_fertilizer(player):
    consequences = ''
    if player["fertilizer_baff"] == "freeze":
        consequences += "\n‚ùÑÔ∏è–î–æ–±—Ä–∏–≤–æ"
    elif player["fertilizer_baff"] == 'warm':
        consequences += "\n‚òÄÔ∏è–î–æ–±—Ä–∏–≤–æ"
    elif player['fertilizer_baff'] == 'moisturizing':
        consequences += "\nüíß–î–æ–±—Ä–∏–≤–æ"
    elif player['fertilizer_baff'] == 'dry':
        consequences += '\nüåæ–î–æ–±—Ä–∏–≤–æ'
    return consequences

async def event_check_and_text(player):
    text = ''

    if player['god_blessing_time'] > player['day']:
        text_god_blessing_time = player['god_blessing_time'] - player['day']

        player['temperature'] = 19

        if player['a_hum'] > 50:
            player['humidity'] = player['a_hum']
        else:
            player['humidity'] = 50

        if text_god_blessing_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_god_blessing_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"

        text += f'\n‚ú®–í–∏ –º–∞—î—Ç–µ <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤—ñ–Ω–Ω—è</b> –Ω–∞ —â–µ {text_god_blessing_time} {dnya_day}. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞—î 19¬∞C, –í–æ–ª–æ–≥—ñ—Å—Ç—å - {player['humidity']}%\n'


    if player["fire_time"] > player["day"]:
        text_fire_time = player["fire_time"] - player["day"]

        plus_temp = round((3 + isqrt(player["day"])), 0)
        player["temperature"] += plus_temp

        minus_hum = round((5 + 2 * isqrt(player["day"])), 0)
        player['humidity'] -= minus_hum

        rows, cols = player["size_cell"].shape
        rand_row = random.randint(0, rows - 1)
        rand_col = random.randint(0, cols - 1)
        plus_cell = round((2 + isqrt(player["day"])), 0)
        if player["size_cell"][rand_row, rand_col] > 0:
            player["size_cell"][rand_row, rand_col] += plus_cell

        if text_fire_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_fire_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"

        text += (f'\nüî•–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ <b>–ì–æ—Ä—è—Ç—å</b> —â–µ {text_fire_time} {dnya_day}. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–±—ñ–ª—å—à–µ–Ω–∞ –Ω–∞ {plus_temp}¬∞C, –≤–æ–ª–æ–≥—ñ—Å—Ç—å –∑–º–µ–Ω—à–µ–Ω–∞ –Ω–∞ {minus_hum},'
                 f' –î–µ—è–∫—ñ —Ä–æ—Å–ª–∏–Ω–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ {plus_cell} –¥–æ–≤—à–µ\n')


    if int(player['toxic_time']) > int(player['day']):
        text_toxic_time = int(player['toxic_time']) - int(player["day"])
        if text_toxic_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_toxic_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
        text += f'\n‚ò¢Ô∏è–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –∑–∞—Ä–∞–∂–µ–Ω—ñ <b>–¢–æ–∫—Å–∏–Ω–æ–º</b> –Ω–∞ {text_toxic_time} {dnya_day}. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –¥–ª—è —Ä–æ—Å–ª–∏–Ω –∑–±—ñ–ª—å—à–µ–Ω–∞ –¥–æ {player["a_hum"]}.\n'


    if player['fertility_time'] > player['day']:
        text_fertility_time  = player['fertility_time'] - player['day']

        player['cell_fruits'] += 2

        if text_fertility_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_fertility_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"

        text += f'\nüåà–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –º–∞—é –±–∞—Ñ <b>–ü–ª–æ–¥—é—á—ñ—Å—Ç—å</b> –Ω–∞ {text_fertility_time} {dnya_day}. –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑–±—ñ–ª—å—à–µ–Ω–∞ –¥–æ {player['cell_fruits']}.\n'


    if player['late_blight_time'] > player['day']:
        text_late_blight_time = player['late_blight_time'] - player['day']

        if 5 > text_late_blight_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_late_blight_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        elif text_late_blight_time > 5:
            dnya_day = '–¥–Ω—ñ–≤'
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"

        text += f'\nü¶†‚ö´–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –∑–∞—Ä–∞–∂–µ–Ω—ñ <b>–ß–æ—Ä–Ω–æ—é –ø–ª—ñ—Å–Ω—è–≤–æ—é</b> —â–µ –Ω–∞ {text_late_blight_time} {dnya_day}! –†—ñ—Å—Ç —Ä–æ—Å–ª–∏–Ω –∑—É–ø–∏–Ω–µ–Ω–æ.\n'


    if player['silver_scab_time'] > player['day']:
        text_silver_scab_time = player['silver_scab_time'] - player['day']

        player['humidity'] -= 10

        if 5 > text_silver_scab_time > 1:
            dnya_day = "–¥–Ω—ñ"
        elif text_silver_scab_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        elif text_silver_scab_time >= 5:
            dnya_day = '–¥–Ω—ñ–≤'
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"

        text += f'\nü¶†ü™ô–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –∑–∞—Ä–∞–∂–µ–Ω—ñ <b>–°—Ä—ñ–±–Ω–æ—é –ø–∞—Ä—à–æ—é</b> –Ω–∞ {text_silver_scab_time} {dnya_day}! –í–æ–ª–æ–≥—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–∞—î—Ç—å—Å—è —à–≤–∏–¥—à–µ –Ω–∞ 10% –∫–æ–∂–µ–Ω –¥–µ–Ω—å.\n'


    if player["humidity"] > max_need_humidity:
        player["size_cell"] += 3
        text += '\nüíß–ó–∞—Å—Ç—ñ–π –≤–æ–¥–∏! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 3 –¥–Ω—ñ –¥–æ–≤—à–µ. +üíÄ'
        player["day_humidity"] += 1
    elif player["day_humidity"] > 0 and player["humidity"] > player["a_hum"]:
        player["day_humidity"] = 0
    if player["humidity"] <= player["a_hum"]:
        text += f'\nüí•–ó–∞—Å—É—Ö–∞! –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É {player["humidity"]}%. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 2 –¥–Ω—ñ –¥–æ–≤—à–µ. +üíÄ'
        player["size_cell"] += 2
        player["day_humidity"] += 1

    elif player["day_humidity"] > 0 and player['a_hum'] < player["humidity"] < max_need_humidity:
        player["day_humidity"] = 0

    if player["temperature"] >= max_need_temperature:
        text += '\n‚òÄÔ∏è–°–ø–µ–∫–∞! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 40% –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –ø–ª–æ–¥—ñ–≤. –í–æ–ª–æ–≥—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–∞—î—Ç—å—Å—è –≤–¥–≤—ñ—á—ñ —à–≤–∏–¥—à–µ. +üíÄ'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 40
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["humidity"] -= player['minus_hum']
        player["day_temperature"] += 1

    elif player["day_temperature"] > 0 and player["temperature"] > 0:
        player["day_temperature"] = 0

    if player["temperature"] <= player["min_need_temperature"]:
        text += '\n‚ùÑÔ∏è–ó–∞–º–æ—Ä–æ–∑–∫–∏! –ó–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 20% –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –ø–ª–æ–¥—ñ–≤. +üíÄ'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 20
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["day_temperature"] += 1

    elif player["day_temperature"] > 0 and player['min_need_temperature'] < player["temperature"] < max_need_temperature:
        player["day_temperature"] = 0

    save_player(player)
    return text

@router.callback_query(lambda c: c.data == 'pick_event' or c.data == "next_day")
async def start_event(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        await callback_query.answer()
        user_id = callback_query.from_user.id
        player = get_player(user_id)

        if not player:
            add_player(user_id)
            player = get_player(user_id)
        probabilities = [20, 20, 20, 20, 20, 20, 14, 14, 14, 12, 12, 28, 8, 6, 4, 5, 5, 6, 6]
        random_event = random.choices(list(event.keys()), probabilities)[0]
        if player['min_need_temperature'] < player['temperature'] < max_need_temperature and player['day_temperature'] < 1:
            pass
        else:
            while random_event in ['cold', 'heat']:
                random_event = random.choices(list(event.keys()), probabilities)[0]

        #random_event = "merchant"

        consequences = check_fertilizer(player)

        if int(player["toxic_time"]) > int(player['day']):
            player["a_hum"] -= 10
        else:
            player['a_hum'] = 0

        if random_event == "calm weather":
            a = 14 + isqrt(player["day"])
            b = 24 + isqrt(player["day"])
            temp = random.randint(round(a, 0), round(b, 0))
            text = event[random_event].replace("temp", str(temp))
            player["temperature"] = temp

        elif random_event == 'rain':
            b = 30 + isqrt(player["day"])
            hum = random.randint(10, round(b, 0))
            text = event[random_event].replace("hum", str(hum))
            player["humidity"] += hum
            if player["fire_time"] > player["day"]:
                player["fire_time"] -= 1
                text += ' –î–æ—â –∑–∞—Ç—É—à–∏–≤ –¥–µ—è–∫—ñ –æ—Å–µ—Ä–µ–¥–∫–∏ –≤–æ–≥–Ω—é'

        elif random_event == 'sparrow attack':
            a = 10 + isqrt(player["day"])
            b = 30 + isqrt(player["day"])
            lost = random.randint(round(a, 0), round(b, 0))
            text = event[random_event].replace("lost", str(lost))
            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1
            player["cell_fruits"] -= player["cell_fruits"] / 100 * lost
            player["cell_fruits"] = round(player["cell_fruits"], 2)

        elif random_event == 'heat':
            a = 30 + isqrt(player["day"])
            b = 40 + isqrt(player["day"])
            temp = random.randint(round(a, 0), round(b, 0))
            text = event[random_event].replace("temp", str(temp))
            player["temperature"] = temp

        elif random_event == "cold":
            a = 0 - isqrt(player["day"])
            b = 8 - isqrt(player["day"])
            temp = random.randint(round(a, 0), round(b, 0))
            text = event[random_event].replace("temp", str(temp))
            player["temperature"] = temp
            if player["temperature"] < -4 and player["fire_time"] > player["day"]:
                player['fire_time'] = 0
                text += ' –ß–µ—Ä–µ–∑ —Å–∏–ª—å–Ω—ñ –º–æ—Ä–æ–∑–∏ –≤–æ–≥–æ–Ω—å –∑–∞—Ç—É—Ö —Å–∞–º –ø–æ —Å–æ–±—ñ'

        elif random_event == 'pit':
            text = event[random_event]
            rows, cols = player["size_cell"].shape
            rand_row = random.randint(0, rows - 1)
            rand_col = random.randint(0, cols - 1)
            player["size_cell"][rand_row, rand_col] = -10

        elif random_event == 'cooling fertilizer':
            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1

            text = event[random_event]

            fertilizer_kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–í–∑—è—Ç–∏', callback_data='pick_cooling'),
                 InlineKeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏', callback_data='pick_leave')]
            ])

            await callback_query.message.edit_text(f'{text}\n–í–æ–ª–æ–≥—ñ—Å—Ç—å: {player['humidity']}%.\n'
                                                   f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {player["temperature"]}.\n'
                                                   f'{consequences}',
                                                   reply_markup=fertilizer_kb, parse_mode=ParseMode.HTML)
            return

        elif random_event == 'warming fertilizer':
            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1

            text = event[random_event]

            fertilizer_kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–í–∑—è—Ç–∏', callback_data='pick_warm'),
                 InlineKeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏', callback_data='pick_leave')]
            ])

            await callback_query.message.edit_text(f'{text}\n–í–æ–ª–æ–≥—ñ—Å—Ç—å: {player['humidity']}.\n'
                                                   f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {player["temperature"]}.\n'
                                                   f'{consequences}',
                                                   reply_markup=fertilizer_kb, parse_mode=ParseMode.HTML)
            return

        elif random_event == 'moisturizing fertilizer':
            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1

            text = event[random_event]

            fertilizer_kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–í–∑—è—Ç–∏', callback_data='pick_moisturizing'),
                 InlineKeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏', callback_data='pick_leave')]
            ])

            await callback_query.message.edit_text(f'{text}\n–í–æ–ª–æ–≥—ñ—Å—Ç—å: {player['humidity']}.\n'
                                                   f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {player["temperature"]}.\n'
                                                   f'{consequences}',
                                                   reply_markup=fertilizer_kb, parse_mode=ParseMode.HTML)
            return

        elif random_event == 'dry fertilizer':
            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1

            text = event[random_event]

            fertilizer_kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–í–∑—è—Ç–∏', callback_data='pick_dry'),
                 InlineKeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏', callback_data='pick_leave')]
            ])

            await callback_query.message.edit_text(f'{text}\n–í–æ–ª–æ–≥—ñ—Å—Ç—å: {player['humidity']}.\n'
                                                   f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {player["temperature"]}.\n'
                                                   f'{consequences}',
                                                   reply_markup=fertilizer_kb, parse_mode=ParseMode.HTML)
            return

        elif random_event == 'toxic rain':
            text = event[random_event]
            player['toxic_time'] = player['day'] + 4
            player["a_hum"] = 40 + 4 * isqrt(player['day'])

        elif random_event == 'rainstorm':
            b_hum = 50 + isqrt(player["day"])
            b_temp = 10 + isqrt(player["day"])
            hum = random.randint(30, round(b_hum, 0))
            temp = random.randint(5, round(b_temp, 0))
            text = event[random_event].replace("hum", str(hum))
            text = text.replace("temp", str(temp))
            player["humidity"] += hum
            if player["fire_time"] > player["day"]:
                player["fire_time"] = 0
                text += ' –ó–ª–∏–≤–∞ –ø–æ—Ç—É—à–∏–ª–∞ –≤–æ–≥–æ–Ω—å'

        elif random_event == 'earthquake':
            text = event[random_event]
            rows, cols = player["size_cell"].shape
            pit_count = random.randint(2, 5)
            for _ in range(pit_count):
                rand_row = random.randint(0, rows - 1)
                rand_col = random.randint(0, cols - 1)
                player["size_cell"][rand_row, rand_col] = -10
        elif random_event == 'merchant':
            goods_fertilizer = {'‚ùÑÔ∏èüß™–û—Ö–æ–ª–æ–¥–∂—É–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ: 40': 'trade_cooling fertilizer', '‚òÄÔ∏èüß™–£—Ç–µ–ø–ª—é–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ: 40': 'trade_warming fertilizer',
                                'üíßüß™–ó–≤–æ–ª–æ–∂—É—é—á–µ –¥–æ–±—Ä–∏–≤–æ: 40': 'trade_moisturizing fertilizer', 'ü™æüß™–°—É—Ö–µ –¥–æ–±—Ä–∏–≤–æ: 40': 'trade_dry fertilizer'}
            goods_details = player['goods_details']

            fertilizer_sale = random.sample(list(goods_fertilizer.items()), 2)
            if not goods_details:
                details_sale = ['–î–µ—Ç–∞–ª—ñ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å', 'no_details']
            else:
                details_sale = random.choice(list(player['goods_details'].items()))

            sales = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text=fertilizer_sale[0][0], callback_data=fertilizer_sale[0][1]),
                 InlineKeyboardButton(text=fertilizer_sale[1][0], callback_data=fertilizer_sale[1][1])],
                [InlineKeyboardButton(text=details_sale[0], callback_data=details_sale[1])],
                [InlineKeyboardButton(text='–ù—ñ—á–æ–≥–æ –Ω–µ –∫—É–ø—É–≤–∞—Ç–∏', callback_data='trade_nothing')]
                 ])

            await callback_query.message.edit_text(f'{event[random_event]}\n–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player['fruits']}', reply_markup = sales)


            if player["temperature"] < avg_need_temperature:
                player["temperature"] += 1
            elif player["temperature"] > avg_need_temperature:
                player["temperature"] -= 1

            return

        elif random_event == 'fire':
            text = event[random_event]
            player["fire_time"] = player["day"] + 3

        elif random_event == 'rainbow':
            text = event[random_event]
            player['fertility_time'] = player['day'] + 3
            player['temperature'], player['humidity'] = 19, 50

        elif random_event == 'Late blight':
            player['late_blight_time'] = player['day'] + isqrt(player['day']) / 1.5
            player['late_blight_time'] = round(player['late_blight_time'])
            text_late_blight_time = player['late_blight_time'] - player['day']
            text = event[random_event].replace('–•', str(text_late_blight_time))

        elif random_event == 'Silver scab':
            text = event[random_event]
            player['silver_scab_time'] = player['day'] + isqrt(player['day']) / 1.5
            player['silver_scab_time'] = round(player['silver_scab_time'])

        elif random_event == 'Pandora\'s box':
            status = ''

            a_temp = 10 - round(1.5 * isqrt(player['day']))
            b_temp = 30 + round(1.5 * isqrt(player['day']))
            player['temperature'] = random.randint(a_temp, b_temp)

            a_hum = 0 - round(2 * isqrt(player['day']))
            b_hum = 80 + round(2 * isqrt(player['day']))
            player['humidity'] = random.randint(a_hum, b_hum)

            random_status = random.choice(status_effect)

            day = round(isqrt(player['day']) / 2)

            player[random_status] = player['day'] + day

            if 5 > day > 1:
                dnya = "–¥–Ω—ñ"
            elif day == 1:
                dnya = "–¥–µ–Ω—å"
            elif day >= 5:
                dnya = '–¥–Ω—ñ–≤'
            else:
                dnya = "–ø–æ–º–∏–ª–∫–∞ #1"

            match random_status:
                case 'toxic_time':
                    status = '–¢–æ–∫—Å–∏–Ω'
                    player["a_hum"] = 40 + 4 * isqrt(player['day'])
                case 'fire_time':
                    status = '–í–æ–≥–æ–Ω—å'
                case 'fertility_time':
                    status = '–ü–ª–æ–¥—é—á—ñ—Å—Ç—å'
                    player['temperature'], player['humidity'] = 19, 50
                case 'late_blight_time':
                    status = '–ß–æ—Ä–Ω–∞ –ø–ª—ñ—Å–Ω—è–≤–∞'
                case 'silver_scab_time':
                    status = '–°—Ä—ñ–±–Ω–∞ –ø–∞—Ä—à–∞'

            text = event[random_event].replace('temp', str(player['temperature']))
            text = text.replace('hum', str(player['humidity']))
            text = text.replace('status', status)
            text = text.replace('day', str(day))
            text = text.replace('dnya', str(dnya))

        else:
            text = '–ü–æ–º–∏–ª–∫–∞: –ñ–æ–¥–Ω–æ—ó –ø–æ–¥—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

        save_player(player)

        add_text = await event_check_and_text(player)
        if add_text == "–í–∏":
            await callback_query.message.edit_text(f'–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. –î–µ–Ω—å: {player["day"]}')
            return
        full_text = f'{text}\n{add_text}'

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(
            f'{full_text}\n–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏: {player["cell_fruits"]}.\n'
            f'–í–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player["humidity"]}%.\n'
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C\n{player["size_cell"]}\n{consequences}\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>.\n'
            f'–û–±–µ—Ä–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥–ª—è —Å–≤–æ–≥–æ –≥–æ—Ä–æ–¥—É:', parse_mode=ParseMode.HTML, reply_markup=kb.upgrade)

@router.callback_query(lambda c: c.data.startswith("trade"))
async def trader_callback(callback_query: CallbackQuery):

    user_id = callback_query.from_user.id
    player = get_player(user_id)
    text = ''

    consequences = check_fertilizer(player)

    if callback_query.data == 'trade_cooling fertilizer':
        if player['fruits'] >= 40:
            player['fruits'] -= 40
            player["fertilizer_baff"] = "freeze"
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_warming fertilizer':
        if player['fruits'] >= 40:
            player['fruits'] -= 40
            player["fertilizer_baff"] = "warm"
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_moisturizing fertilizer':
        if player['fruits'] >= 40:
            player['fruits'] -= 40
            player['fertilizer_baff'] = 'moisturizing'
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_dry fertilizer':
        if player['fruits'] >= 40:
            player['fruits'] -= 40
            player['fertilizer_baff'] = 'dry'
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_greenhouse_fabric':
        if player['fruits'] >= 80:
            player['fruits'] -= 80
            player["greenhouse_counter"] += 1
            del player['goods_details']["–¢–∫–∞–Ω–∏–Ω–∞: 80"]
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_greenhouse_ventilation':
        if player['fruits'] >= 100:
            player['fruits'] -= 100
            player["greenhouse_counter"] += 1
            del player['goods_details']["–í–µ–Ω—Ç–∏–ª—è—Ü—ñ—è: 100"]
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_greenhouse_wood':
        if player['fruits'] >= 90:
            player['fruits'] -= 90
            player["greenhouse_counter"] += 1
            del player['goods_details']["–î–µ—Ä–µ–≤–∏–Ω–∞: 90"]
        else:
            await callback_query.answer(text='–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–ª–æ–¥—ñ–≤ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ', show_alert=True)
            return
    elif callback_query.data == 'trade_nothing':
        pass
    elif callback_query.data == 'no_details':
        await callback_query.answer(text='–î–µ—Ç–∞–ª–µ–π –≤–∂–µ –Ω–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—å', show_alert=True)
        return

    if player["greenhouse_counter"] == 3:
        text = ('–í–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏ –ø–æ–±—É–¥–æ–≤—É üè†<b>—Ç–µ–ø–ª–∏—Ü—ñ</b>. –¢–µ–ø–µ—Ä –∫—É–ª—å—Ç—É—Ä–∏ –±—É–¥—É—Ç—å –º–µ–Ω—à–µ –º–µ—Ä–∑–Ω—É—Ç–∏, —Ç–∞ –≤–æ–¥–∞ –±—É–¥–µ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ –≤–∏–ø–∞—Ä–æ–≤—É–≤–∞—Ç–∏—Å—å. '
                '+15 –¥–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—ó –¥–æ–ø—É—Å—Ç–∏–º–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏, +5% –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –∫–æ–∂–µ–Ω –¥–µ–Ω—å\n')
        player['min_need_temperature'] = -7
        player['minus_hum'] -= 5
        player['greenhouse_counter'] = 0

    add_text = await event_check_and_text(player)
    if add_text == "–í–∏":
        await callback_query.message.edit_text(f'–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. –î–µ–Ω—å: {player['day']}')
        return
    full_text = f'{text}\n{add_text}'

    await callback_query.message.edit_text(
        f'{full_text}\n–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏: {player["cell_fruits"]}.\n'
        f'–í–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player["humidity"]}%.\n'
        f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C\n{player["size_cell"]}\n{consequences}\n'
        f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
        f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>.\n'
        f'–û–±–µ—Ä–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥–ª—è —Å–≤–æ–≥–æ –≥–æ—Ä–æ–¥—É:', parse_mode=ParseMode.HTML, reply_markup=kb.upgrade)


@router.callback_query(lambda c: c.data.startswith("pick"))
async def fertilizer_choose(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        user_id = callback_query.from_user.id
        player = get_player(user_id)

        app = ''

        if callback_query.data == 'pick_leave':
            text = '–í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –∑–∞–ª–∏—à–∏—Ç–∏—Å—å –ø—Ä–∏ —Å–≤–æ—î–º—É'
        elif callback_query.data == 'pick_cooling':
            player['fertilizer_baff'] = 'freeze'
            text = '–í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –≤–∑—è—Ç–∏ ‚ùÑÔ∏è–î–æ–±—Ä–∏–≤–æ'
        elif callback_query.data == 'pick_warm':
            player['fertilizer_baff'] = 'warm'
            text = '–í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –≤–∑—è—Ç–∏ ‚òÄÔ∏è–î–æ–±—Ä–∏–≤–æ'
        elif callback_query.data == 'pick_moisturizing':
            player['fertilizer_baff'] = 'moisturizing'
            text = '–í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –≤–∑—è—Ç–∏ üíß–î–æ–±—Ä–∏–≤–æ'
        elif callback_query.data == 'pick_dry':
            player['fertilizer_baff'] = 'dry'
            text = '–í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –≤–∑—è—Ç–∏ üåæ–î–æ–±—Ä–∏–≤–æ'
        else:
            text = '–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ–ª–±–µ–∫'

        consequences = check_fertilizer(player)
        save_player(player)

        add_text = await event_check_and_text(player)
        if player["day_temperature"] == 4 or player["day_humidity"] == 4:
            life_ran = random.randint(0, 20)
            print(life_ran)
            if life_ran == 0:
                player['toxic_time'], player['fire_time'], player['temperature'], player['humidity'] = 0, 0, 19, 50
                player['god_blessing_time'] = player['day'] + 3

                text_god_blessing_time = player["god_blessing_time"] - player["day"]

                if text_god_blessing_time > 1:
                    dnya_day = "–¥–Ω—ñ"
                elif text_god_blessing_time == 1:
                    dnya_day = "–¥–µ–Ω—å"
                else:
                    dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
                app = ('–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n'
                       '‚ú®–ü–æ–º–∏—Ä–∞—é—á–∏, –≤–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –Ω–µ–±–µ—Å –Ω–∞ –≤–∞—Å –ø—Ä–æ–ª–∏–≤–∞—î—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, –ë–æ–≥–∏ —Ü—å–æ–≥–æ —Å–≤—ñ—Ç—É –≤–∏—Ä—ñ—à–∏–ª–∏ –¥–∞—Ç–∏ –≤–∞–º –¥—Ä—É–≥–∏–π —à–∞–Ω—Å.\n'
                       '–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –µ—Ñ–µ–∫—Ç <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> –Ω–∞ 3 –¥–Ω—ñ\n\n'
                       f'–í–∏ –ø—ñ–¥ –¥—ñ—î—é –µ—Ñ–µ–∫—Ç—É <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> —â–µ {text_god_blessing_time} {dnya_day}. '
                       f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å')

            else:
                end_day = player['day']
                await callback_query.message.edit_text(
                    f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n–î–µ–Ω—å: {end_day}')
                end_game(player)
                return

        full_text = f'{text}\n{add_text}'

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(
            f'{app}{full_text}\n–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏: {player["cell_fruits"]}.\n'
            f'–í–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player["humidity"]}%.\n'
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C\n{player["size_cell"]}\n{consequences}\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>.\n'
            f'–û–±–µ—Ä–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥–ª—è —Å–≤–æ–≥–æ –≥–æ—Ä–æ–¥—É:', parse_mode=ParseMode.HTML, reply_markup=kb.upgrade)



@router.callback_query(lambda c: c.data == 'Expansion')
async def expansion(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        await callback_query.answer()

        app = ''

        user_id = callback_query.from_user.id
        player = get_player(user_id)

        if not player:
            add_player(user_id)
            player = get_player(user_id)

        if player["size_cell"].shape[0] == 10:
            await callback_query.message.edit_text('–í–∞—à–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å, –±—ñ–ª—å—à–µ —Ä–æ–∑—à–∏—Ä—è—Ç–∏—Å—å –Ω–µ –≤–∏–π–¥–µ. –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–µ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è',
                                                   reply_markup=kb.upgrade_without_expansion)
            return

        if player["day_temperature"] == 4 or player["day_humidity"] == 4:
            life_ran = random.randint(0, 20)
            print(life_ran)
            if life_ran == 0:
                player['toxic_time'], player['fire_time'], player['temperature'], player['humidity'] = 0, 0, 19, 50
                player['god_blessing_time'] = player['day'] + 3

                text_god_blessing_time = player["god_blessing_time"] - player["day"]

                if text_god_blessing_time > 1:
                    dnya_day = "–¥–Ω—ñ"
                elif text_god_blessing_time == 1:
                    dnya_day = "–¥–µ–Ω—å"
                else:
                    dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
                app = ('–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n'
                       '‚ú®–ü–æ–º–∏—Ä–∞—é—á–∏, –≤–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –Ω–µ–±–µ—Å –Ω–∞ –≤–∞—Å –ø—Ä–æ–ª–∏–≤–∞—î—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, –ë–æ–≥–∏ —Ü—å–æ–≥–æ —Å–≤—ñ—Ç—É –≤–∏—Ä—ñ—à–∏–ª–∏ –¥–∞—Ç–∏ –≤–∞–º –¥—Ä—É–≥–∏–π —à–∞–Ω—Å.\n'
                       '–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –µ—Ñ–µ–∫—Ç <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> –Ω–∞ 3 –¥–Ω—ñ\n\n'
                       f'–í–∏ –ø—ñ–¥ –¥—ñ—î—é –µ—Ñ–µ–∫—Ç—É <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> —â–µ {text_god_blessing_time} {dnya_day}. '
                       f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å\n\n')

            else:
                end_day = player['day']
                await callback_query.message.edit_text(f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n–î–µ–Ω—å: {end_day}')
                end_game(player)
                return "–í–∏", f"{end_day}"
        if player['late_blight_time'] > player['day']:
            pass
        else:
            player["size_cell"] -= 1

            if np.any(player["size_cell"] == 0):
                player["fruits"] += np.count_nonzero(player['size_cell'] == 0) * player['cell_fruits']
                player['fruits'] = round(player["fruits"], 0)
                player["size_cell"][player["size_cell"] == 0] = 10
        rand_num = random.randint(1, 40)
        if rand_num == 1 or rand_num == 2:
            app += 'üï≥–ü—ñ–¥ —á–∞—Å –≤–∏–∫–æ–ø—É–≤–∞–Ω–Ω—è —è–º–æ–∫ –≤–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –≤ –ø–µ—á–µ—Ä—É. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–∞–º–∞–≥–∞—é—á–∏—Å—å –≤–∏–±—Ä–∞—Ç–∏—Å—å –∑ –Ω–µ—ó. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞'
            new_row = np.array([[10, 10, -10]])
            player["humidity"] -= player['minus_hum']
            player["size_cell"] += 1
        elif rand_num == 3:
            app += 'ü™®–í–∏ —Ä–æ–∑—É–º—ñ—î—Ç–µ —â–æ –Ω–∞ —Ü—ñ–π —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –±–∞–≥–∞—Ç–æ –∫–∞–º—ñ–Ω–Ω—è. –ö—É–ª—å—Ç—É—Ä–∏ –±—É–¥—É—Ç—å —Ä–æ—Å—Ç–∏ –¥–æ–≤—à–µ'
            new_row = np.array([[15, 15, 15]])
        else:
            new_row = np.array([[10, 10, 10]])
            app += ''


        player["size_cell"] = np.vstack([player["size_cell"], new_row])
        player["humidity"] -= player['minus_hum']

        player["day"] += 1

        save_player(player)

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(f'{app}\n'
                                               f'–¢–≤—ñ–π –≥–æ—Ä–æ–¥ –∑–±—ñ–ª—å—à–µ–Ω–æ –¥–æ \n{player["size_cell"]}\n\n'
                                            f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
                                               f'–í–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%.\n'
                                            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                               f'–ó –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                               f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

@router.callback_query(lambda c: c.data == 'Fertilization')
async def fertilization(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        await callback_query.answer()
        user_id = callback_query.from_user.id
        player = get_player(user_id)

        if not player:
            add_player(user_id)
            player = get_player(user_id)

        app = ''
        fert_text = ""

        if player["day_temperature"] == 4 or player["day_humidity"] == 4:
            life_ran = random.randint(0, 20)
            print(life_ran)
            if life_ran == 0:
                player['toxic_time'], player['fire_time'], player['temperature'], player['humidity'] = 0, 0, 19, 50
                player['god_blessing_time'] = player['day'] + 3

                text_god_blessing_time = player["god_blessing_time"] - player["day"]

                if text_god_blessing_time > 1:
                    dnya_day = "–¥–Ω—ñ"
                elif text_god_blessing_time == 1:
                    dnya_day = "–¥–µ–Ω—å"
                else:
                    dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
                app = ('–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n'
                       '‚ú®–ü–æ–º–∏—Ä–∞—é—á–∏, –≤–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –Ω–µ–±–µ—Å –Ω–∞ –≤–∞—Å –ø—Ä–æ–ª–∏–≤–∞—î—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, –ë–æ–≥–∏ —Ü—å–æ–≥–æ —Å–≤—ñ—Ç—É –≤–∏—Ä—ñ—à–∏–ª–∏ –¥–∞—Ç–∏ –≤–∞–º –¥—Ä—É–≥–∏–π —à–∞–Ω—Å.\n'
                       '–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –µ—Ñ–µ–∫—Ç <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> –Ω–∞ 3 –¥–Ω—ñ\n\n'
                       f'–í–∏ –ø—ñ–¥ –¥—ñ—î—é –µ—Ñ–µ–∫—Ç—É <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> —â–µ {text_god_blessing_time} {dnya_day}. '
                       f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å\n\n')

            else:
                end_day = player['day']
                await callback_query.message.edit_text(
                    f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n–î–µ–Ω—å: {end_day}')
                end_game(player)
                return "–í–∏", f"{end_day}"

        match player["fertilizer_baff"]:
            case "standart":
                player["cell_fruits"] += 1
                fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥'
            case "freeze":
                player["cell_fruits"] += 1
                player["temperature"] -= 10
                fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–º–µ–Ω—à–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 10¬∞C'
            case "warm":
                player["cell_fruits"] += 1
                player["temperature"] += 10
                fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–º–µ–Ω—à–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 10¬∞C'
            case 'moisturizing':
                player["cell_fruits"] += 1
                player["humidity"] += 15
                fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–±—ñ–ª—å—à–∏–≤ –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É –Ω–∞ 15%'
            case 'dry':
                player['cell_fruits'] += 1
                player['humidity'] -= 15
                fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–º–µ–Ω—à–∏–≤ –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É –Ω–∞ 15%'

        if player['late_blight_time'] > player['day']:
            pass
        else:
            player["size_cell"] -= 1

            if np.any(player["size_cell"] == 0):
                player["fruits"] += np.count_nonzero(player['size_cell'] == 0) * player['cell_fruits']
                player['fruits'] = round(player["fruits"], 0)
                player["size_cell"][player["size_cell"] == 0] = 10
        player["cell_fruits"] += 1
        player["cell_fruits"] = round(player["cell_fruits"])
        player["humidity"] -= player['minus_hum']

        player["day"] += 1

        save_player(player)

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(f'{app}{fert_text}. –¢–µ–ø–µ—Ä –∑ –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                            f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
                                               f'–í–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%.\n'
                                            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                               f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                               f'–†–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å \n{player["size_cell"]}.\n\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

@router.callback_query(lambda c: c.data == 'Watering')
async def watering(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        await callback_query.answer()
        user_id = callback_query.from_user.id
        player = get_player(user_id)

        if not player:
            add_player(user_id)
            player = get_player(user_id)

        app = ''

        if player["day_temperature"] == 4 or player["day_humidity"] == 4:
            life_ran = random.randint(0, 20)
            print(life_ran)
            if life_ran == 0:
                player['toxic_time'], player['fire_time'], player['temperature'], player['humidity'] = 0, 0, 19, 50
                player['god_blessing_time'] = player['day'] + 3

                text_god_blessing_time = player["god_blessing_time"] - player["day"]

                if text_god_blessing_time > 1:
                    dnya_day = "–¥–Ω—ñ"
                elif text_god_blessing_time == 1:
                    dnya_day = "–¥–µ–Ω—å"
                else:
                    dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
                app = ('–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n'
                       '‚ú®–ü–æ–º–∏—Ä–∞—é—á–∏, –≤–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –Ω–µ–±–µ—Å –Ω–∞ –≤–∞—Å –ø—Ä–æ–ª–∏–≤–∞—î—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, –ë–æ–≥–∏ —Ü—å–æ–≥–æ —Å–≤—ñ—Ç—É –≤–∏—Ä—ñ—à–∏–ª–∏ –¥–∞—Ç–∏ –≤–∞–º –¥—Ä—É–≥–∏–π —à–∞–Ω—Å.\n'
                       '–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –µ—Ñ–µ–∫—Ç <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> –Ω–∞ 3 –¥–Ω—ñ\n\n'
                       f'–í–∏ –ø—ñ–¥ –¥—ñ—î—é –µ—Ñ–µ–∫—Ç—É <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> —â–µ {text_god_blessing_time} {dnya_day}. '
                       f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å\n\n')

            else:
                end_day = player['day']
                await callback_query.message.edit_text(
                    f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n–î–µ–Ω—å: {end_day}')
                end_game(player)
                return "–í–∏", f"{end_day}"

        if player['late_blight_time'] > player['day']:
            pass
        else:
            player["size_cell"] -= 1

            if np.any(player["size_cell"] == 0):
                player["fruits"] += np.count_nonzero(player['size_cell'] == 0) * player['cell_fruits']
                player['fruits'] = round(player["fruits"], 0)
                player["size_cell"][player["size_cell"] == 0] = 10
        player["humidity"] += 30
        player["humidity"] -= player['minus_hum']
        player["temperature"] -= 5

        player["day"] += 1

        save_player(player)

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(f'{app}–¢–∏ –ø–æ–ª–∏–≤ –æ–≥–æ—Ä–æ–¥. –¢–µ–ø–µ—Ä –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–º–µ–Ω—à–µ–Ω–∞ –Ω–∞ 5¬∞C.\n'
                                               f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
                                            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                               f'–ó –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                               f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                               f'–†–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É: \n{player["size_cell"]}.\n\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                               f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

@router.callback_query(lambda c: c.data == 'Hilling')
async def hilling(callback_query: CallbackQuery):
    if edit_lock.locked():
        await callback_query.answer("‚è≥ –ó–∞—á–µ–∫–∞–π, –¥—ñ—é –≤–∂–µ –≤–∏–∫–æ–Ω—É—î–º–æ...", show_alert=False)
        return
    async with edit_lock:
        await callback_query.answer()
        user_id = callback_query.from_user.id
        player = get_player(user_id)
        if not player:
            add_player(user_id)
            player = get_player(user_id)

        app = ''

        if player["day_temperature"] == 4 or player["day_humidity"] == 4:
            life_ran = random.randint(0, 20)
            print(life_ran)
            if life_ran == 0:
                player['toxic_time'], player['fire_time'], player['temperature'], player['humidity'] = 0, 0, 19, 50
                player['god_blessing_time'] = player['day'] + 3

                text_god_blessing_time = player["god_blessing_time"] - player["day"]

                if text_god_blessing_time > 1:
                    dnya_day = "–¥–Ω—ñ"
                elif text_god_blessing_time == 1:
                    dnya_day = "–¥–µ–Ω—å"
                else:
                    dnya_day = "–ø–æ–º–∏–ª–∫–∞ #1"
                app = ('–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n'
                       '‚ú®–ü–æ–º–∏—Ä–∞—é—á–∏, –≤–∏ –±–∞—á–∏—Ç–µ —è–∫ –∑ –Ω–µ–±–µ—Å –Ω–∞ –≤–∞—Å –ø—Ä–æ–ª–∏–≤–∞—î—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, –ë–æ–≥–∏ —Ü—å–æ–≥–æ —Å–≤—ñ—Ç—É –≤–∏—Ä—ñ—à–∏–ª–∏ –¥–∞—Ç–∏ –≤–∞–º –¥—Ä—É–≥–∏–π —à–∞–Ω—Å.\n'
                       '–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –µ—Ñ–µ–∫—Ç <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> –Ω–∞ 3 –¥–Ω—ñ\n\n'
                       f'–í–∏ –ø—ñ–¥ –¥—ñ—î—é –µ—Ñ–µ–∫—Ç—É <b>–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω—è</b> —â–µ {text_god_blessing_time} {dnya_day}. '
                       f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å\n\n')


            else:
                end_day = player['day']
                await callback_query.message.edit_text(
                    f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏ —Å–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è...\n–î–µ–Ω—å: {end_day}')
                end_game(player)
                return "–í–∏", f"{end_day}"

        if player['late_blight_time'] > player['day']:
            pass
        else:
            player["size_cell"] -= 1

            if np.any(player["size_cell"] == 0):
                player["fruits"] += np.count_nonzero(player['size_cell'] == 0) * player['cell_fruits']
                player['fruits'] = round(player["fruits"], 0)
                player["size_cell"][player["size_cell"] == 0] = 10
        player["humidity"] -= player['minus_hum']
        player["day"] += 1
        player['temperature'] += 7
        player['humidity'] -= 10
        save_player(player)

        await asyncio.sleep(0.7)

        await callback_query.message.edit_text(
            f'{app}–í–∏ –ø—ñ–¥–≥–æ—Ä–Ω—É–ª–∏ –≥—Ä—è–¥–∫–∏ —Ç–∞ –∑–±—ñ–ª—å—à–∏–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ 7¬∞C. –¢–µ–ø–µ—Ä —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}%.\n'
            f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
            f'–í–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player['humidity']}%.\n'
            f'–ó –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
            f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
            f'–†–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É: \n{player["size_cell"]}.\n\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
            f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day,
            parse_mode=ParseMode.HTML)

