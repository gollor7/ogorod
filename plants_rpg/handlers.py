import logging
import random

import math
from math import isqrt

from aiogram import Router

from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.fsm.state import StatesGroup, State

import numpy as np

from database import add_player, get_player, update_player

import plants_rpg.keybords as kb

from aiogram.enums import ParseMode

logging.basicConfig(level=logging.DEBUG)
router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Ä–ø–≥ –ø—Ä–æ –æ–≥–æ—Ä–æ–¥–Ω–∏–∫–∞, –¥–µ –≤–∞–º —Ç—Ä–µ–±–∞ –±—É–¥–µ –≤–∏–∂–∏–≤–∞—Ç–∏ —è–∫ –º–æ–∂–Ω–∞ –¥–æ–≤—à–µ. –ö–æ–º–∞–Ω–¥–∞ /guide —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏,"
                        "—Ç–∞ —Ä—ñ–∑–Ω—ñ –¥–µ—Ç–∞–ª—ñ, —è–∫—â–æ –≥—Ä–∞—î—Ç–µ –≤–ø–µ—Ä—à–µ —Ç–æ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –¥–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—è. /game —â–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É")

@router.message(Command('game'))
async def game_start(message: Message):
    user_id = message.from_user.id
    add_player(user_id)
    await message.reply("–¢–∏ –ø–æ—á–∏–Ω–∞—î—à –≥—Ä—É –∑ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—î—é 3—Ö3 –∫–ª—ñ—Ç–∏–Ω–∫–∏, –Ω–∞ –∫–æ–∂–Ω—ñ–π –∑–∞—Ä–∞–∑ —Ä–æ—Å—Ç–µ –∫–∞—Ä—Ç–æ–ø–ª—è —è–∫–∞ –≤–∏—Ä–æ—Å—Ç–µ —á–µ—Ä–µ–∑ 10 —ñ–≥—Ä–æ–≤–∏—Ö –¥–Ω—ñ–≤.\n\n"
                        "–ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É '–ü–æ–¥—ñ—è' —â–æ–± —Å—Ç–∞–ª–∞—Å—å —è–∫–∞—Å—å –ø–æ–¥—ñ—è", reply_markup=kb.event)

@router.message(Command('guide'))
async def game_start(message: Message):
    await message.reply('–ì–∞–π–¥ –ø–æ –≥—Ä—ñ:\n\n–Ü–≥—Ä–æ–≤–µ –ø–æ–ª–µ\n<blockquote expandable>–ù–∞ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏ –≤–∞—à–µ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ –≤–∏–≥–ª—è–¥–∞—î –Ω–∞—Å—Ç—É–ø–Ω–∏–º —á–∏–Ω–æ–º\n'
                        '[[10 10 10]\n[10 10 10]\n[10 10 10]]\n–¶–∏—Ñ—Ä–∏ –ø–æ–∑–Ω–∞—á–∞—é—Ç—å —á–µ—Ä–µ–∑ —Å–∫—ñ–ª—å–∫–∏ —ñ–≥—Ä–æ–≤–∏—Ö –¥–Ω—ñ–≤ –≤–∏—Ä–æ—Å—Ç–µ –≤—Ä–æ–∂–∞–π, –∫–æ–ª–∏ —Ü–∏—Ñ—Ä–∞ —Å—Ç–∞—î 0, '
                        '–≤—Ä–æ–∂–∞–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–∏—Ä–∞—î—Ç—å—Å—è —Ç–∞ —Ü–∏—Ñ—Ä–∞ –∑–Ω–æ–≤—É —Å—Ç–∞—î 10. –ü—Ä–∏ –¥–µ—è–∫–∏—Ö –ø–æ–¥—ñ—è—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ <b>–Ø–º–∞</b> —Ü–∏—Ñ—Ä–∞ –º–æ–∂–µ —Å—Ç–∞—Ç–∏ –º–µ–Ω—à–µ 0. '
                        '–¶–µ –æ–∑–Ω–∞—á–∞—î —â–æ –Ω–∞ —Ü—ñ–π –∫–ª—ñ—Ç–∏–Ω—Ü—ñ —è–º–∞ —Ç–∞ —Ç—É—Ç –≤–∂–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–º–æ–∂–µ —Ä–æ—Å—Ç–∏.</blockquote>\n\n'
                        '–ü–æ—Ä–∞–∑–∫–∞\n<blockquote expandable>–í–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞—Ç–∏ —á–µ—Ä–µ–∑ –¥–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–∏. –ü–µ—Ä—à–∏–π - <b>–æ—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ</b>. –Ø–∫—â–æ —É –≤–∞—Å –±—É–¥–µ 2 –æ—á–∫–∞ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ,'
                        '—Ç–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å, —è–∫—â–æ –≤–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–µ —Å–∏—Ç—É–∞—Ü—ñ—é –≤–∏ –ø—Ä–æ–≥—Ä–∞—î—Ç–µ. –û—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –Ω–∞–±–∏—Ä–∞—é—Ç—å—Å—è –∑–∞ —É–º–æ–≤–∏ —â–æ %–≤–æ–ª–æ–≥–æ—Å—Ç—ñ –º–µ–Ω—à–∏–π –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 0.'
                        '–û—á–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –æ–±–Ω—É–ª—è—é—Ç—å—Å—è —è–∫—â–æ %–≤–æ–ª–æ–≥–æ—Å—Ç—ñ –±—É–¥–µ –±—ñ–ª—å—à–∏–π –∑–∞ 0 —Ö–æ—á–∞ –± –Ω–∞ –¥–µ–Ω—å. '
                        '–î—Ä—É–≥–∏–π —Ñ–∞–∫—Ç–æ—Ä - <b>–æ—á–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏</b>. –ü–æ–∫–∏ —â–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π.</blockquote>\n\n'
                        '', parse_mode=ParseMode.HTML)


event = {'calm weather': 'üå§–°–ø–æ–∫—ñ–π–Ω–∞, —Ç–µ–ø–ª–∞ –ø–æ–≥–æ–¥–∞. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C', 'rain': 'üåß–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –¥–æ—â. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å +hum% –¥–æ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ',
         'sparrow attack': 'ü¶§–ù–∞–ª—ñ—Ç –≥–æ—Ä–æ–±—Ü—ñ–≤. –í–æ–Ω–∏ —ó–¥—è—Ç—å –≤–∞—à—ñ –ø–ª–æ–¥–∏, –≤–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ lost% –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –ø–ª–æ–¥—ñ–≤, –∞–ª–µ —ñ 30% —à–∫—ñ–¥–Ω–∏–∫—ñ–≤ —Ç–µ–∂ –ø–æ–º–µ—Ä–ª–∏',
         'heat': '‚òÄÔ∏è–ü–∞–ª—é—á–µ —Å–æ–Ω—Ü–µ! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è —Å—Ç–∞—î temp¬∞C', 'cold': 'üå¨–ê—Ä–∫—Ç–∏—á–Ω—ñ –≤—ñ—Ç—Ä–∏! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è –∑–Ω–∏–∂—É—î—Ç—å—Å—è –¥–æ temp¬∞C',
         'pit': 'üï≥–í–∏ –∑–Ω–∞–π—à–ª–∏ —è–º—É! –í–∏ —á—ñ—Ç–∫–æ –ø–∞–º\'—è—Ç–∞—î—Ç–µ —â–æ —Ä–∞–Ω—ñ—à–µ —ó—ó —Ç—É—Ç –Ω–µ –±—É–ª–æ. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞',
         'cooling fertilizer': '‚ùÑÔ∏èüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ –æ—Ö–æ–ª–æ–¥–∂—É–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–º–µ–Ω—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 5¬∞C',
         'warming fertilizer': '‚òÄÔ∏èüß™–ù–∞ —Å–∫–ª–∞–¥—ñ –≤–∏ –∑–Ω–∞–π—à–ª–∏ —É—Ç–µ–ø–ª—é–≤–∞–ª—å–Ω–µ –¥–æ–±—Ä–∏–≤–æ! –¢–µ–ø–µ—Ä –≤–∞—à–∞ –¥—ñ—è <b>–£–¥–æ–±—Ä–µ–Ω–Ω—è</b> –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±—ñ–ª—å—à—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 5¬∞C',
         'toxic rain': '‚ò¢Ô∏èüåß–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∫–∏—Å–ª–æ—Ç–Ω–∏–π –¥–æ—â. –í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å –¥–µ–±–∞—Ñ <b>–¢–æ–∫—Å–∏–Ω</b>'}


max_need_humidity = 90 #%
avg_need_humidity = 45

min_need_temperature = 8 #¬∞C
max_need_temperature = 30
avg_need_temperature = 19

def end_game(player):
    player["humidity"] = 45
    player["temperature"] = 19
    player["cell_fruits"] = 10
    player["size_cell"] = np.array([[10, 10, 10], [10, 10, 10], [10, 10, 10]])
    player["fruits"] = 0
    player["day"] = 1
    player["day_humidity"] = 0
    player["day_temperature"] = 0

    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"]
    )

def save_player(player):
    update_player(
        player["user_id"],
        humidity=player["humidity"],
        temperature=player["temperature"],
        cell_fruits=player["cell_fruits"],
        size_cell=player["size_cell"],
        fruits=player["fruits"],
        day=player["day"],
        day_humidity=player["day_humidity"],
        day_temperature=player["day_temperature"],
        fertilizer_baff=player["fertilizer_baff"],
        toxic_time=player["toxic_time"],
        a_hum=player["a_hum"]
    )

@router.callback_query(lambda c: c.data == 'pick_event' or c.data == "next_day")
async def start_event(callback_query: CallbackQuery):
    await callback_query.answer()
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    random_event = random.choice(list(event.keys()))

    if random_event == "calm weather":
        a = 14 + isqrt(player["day"])
        b = 24 + isqrt(player["day"])
        temp = random.randint(round(a, 0), round(b, 0))
        text = event[random_event].replace("temp", str(temp))
        player["temperature"] = temp

    elif random_event == 'rain':
        b = 30 + isqrt(player["day"])
        hum = random.randint(10, round(b, 0))
        text = event[random_event].replace("hum", str(hum))
        player["humidity"] += hum

    elif random_event == 'sparrow attack':
        a = 10 + isqrt(player["day"])
        b = 30 + isqrt(player["day"])
        lost = random.randint(round(a, 0), round(b, 0))
        text = event[random_event].replace("lost", str(lost))
        if player["temperature"] < avg_need_temperature:
            player["temperature"] += 1
        elif player["temperature"] > avg_need_temperature:
            player["temperature"] -= 1
        player["cell_fruits"] -= player["cell_fruits"] / 100 * lost
        player["cell_fruits"] = round(player["cell_fruits"], 2)

    elif random_event == 'heat':
        a = 30 + isqrt(player["day"])
        b = 40 + isqrt(player["day"])
        temp = random.randint(round(a, 0), round(b, 0))
        text = event[random_event].replace("temp", str(temp))
        player["temperature"] = temp

    elif random_event == "cold":
        a = 0 - isqrt(player["day"])
        b = 8 - isqrt(player["day"])
        temp = random.randint(round(a, 0), round(b, 0))
        text = event[random_event].replace("temp", str(temp))
        player["temperature"] = temp

    elif random_event == 'pit':
        text = event[random_event]
        rows, cols = player["size_cell"].shape
        rand_row = random.randint(0, rows - 1)
        rand_col = random.randint(0, cols - 1)
        player["size_cell"][rand_row, rand_col] = -10

    elif random_event == 'cooling fertilizer':
        text = event[random_event]
        player["fertilizer_baff"] = "freeze"
        if player["temperature"] < avg_need_temperature:
            player["temperature"] += 1
        elif player["temperature"] > avg_need_temperature:
            player["temperature"] -= 1

    elif random_event == 'warming fertilizer':
        text = event[random_event]
        player["fertilizer_baff"] = "warm"
        if player["temperature"] < avg_need_temperature:
            player["temperature"] += 1
        elif player["temperature"] > avg_need_temperature:
            player["temperature"] -= 1

    elif random_event == 'toxic rain':
        text = event[random_event]
        player['toxic_time'] = player['day'] + 4
        player["a_hum"] = 40 + 4 * isqrt(player['day'])

    else:
        text = '–ü–æ–º–∏–ª–∫–∞: –ñ–æ–¥–Ω–æ—ó –ø–æ–¥—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'



    if int(player["toxic_time"]) > int(player['day']):
        player["a_hum"] -= 10
    else:
        player['a_hum'] = 0



    save_player(player)

    consequences = ''
    if player["humidity"] > max_need_humidity:
        player["size_cell"] += 3
        text += '\nüíß–ó–∞—Å—Ç—ñ–π –≤–æ–¥–∏! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 3 –¥–Ω—ñ –¥–æ–≤—à–µ. +üíÄ'
        player["day_humidity"] += 1
    elif player["day_humidity"] > 0 and player["humidity"] > player["a_hum"]:
        player["day_humidity"] = 0
    if player["humidity"] <= player["a_hum"]:
        text += f'\nüí•–ó–∞—Å—É—Ö–∞! –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É {player["a_hum"]}%. –ü–ª–æ–¥–∏ —Ä–æ—Å—Ç–∏–º—É—Ç—å –Ω–∞ 2 –¥–Ω—ñ –¥–æ–≤—à–µ. +üíÄ'
        player["size_cell"] += 2
        player["day_humidity"] += 1

    elif player["day_humidity"] > 0 and player['a_hum'] < player["humidity"] < max_need_humidity:
        player["day_humidity"] = 0

    if player["temperature"] >= max_need_temperature:
        text += '\n‚òÄÔ∏è–°–ø–µ–∫–∞! –ó–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 40% –ø–ª–æ–¥—ñ–≤. –í–æ–ª–æ–≥—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–∞—î—Ç—å—Å—è –≤–¥–≤—ñ—á—ñ —à–≤–∏–¥—à–µ'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 40
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["humidity"] -= 10
        player["day_temperature"] += 0

    elif player["day_temperature"] > 0 and player["temperature"] > 0:
        player["day_temperature"] = 0

    if player["temperature"] <= min_need_temperature:
        text += '\n‚ùÑÔ∏è–ó–∞–º–æ—Ä–æ–∑–∫–∏! –ó–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ 20% –ø–ª–æ–¥—ñ–≤'
        player["cell_fruits"] -= player["cell_fruits"] / 100 * 20
        player["cell_fruits"] = round(player["cell_fruits"], 2)
        player["day_temperature"] += 0

    elif player["day_temperature"] > 0 and 8 < player["temperature"] < player["max_need_temperature"]:
        player["day_temperature"] = 0

    if int(player['toxic_time']) > int(player['day']):
        text_toxic_time = int(player['toxic_time']) - int(player["day"])
        if text_toxic_time > 1:
            dnya_day = "–¥–Ω—è"
        elif text_toxic_time == 1:
            dnya_day = "–¥–µ–Ω—å"
        else:
            dnya_day = "–ø–æ–º–∏–ª–∫–∞ –≤ —Ç–æ–∫—Å–∏–Ω—ñ"
        text += f'\n‚ò¢Ô∏è–í–∞—à—ñ —Ä–æ—Å–ª–∏–Ω–∏ –∑–∞—Ä–∞–∂–µ–Ω—ñ <b>–¢–æ–∫—Å–∏–Ω–æ–º</b> –Ω–∞ {text_toxic_time} {dnya_day}. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –¥–ª—è —Ä–æ—Å–ª–∏–Ω –∑–±—ñ–ª—å—à–µ–Ω–∞ –¥–æ {player["a_hum"]}'

    if player["fertilizer_baff"] == "freeze":
        consequences += "\n‚ùÑÔ∏è–î–æ–±—Ä–∏–≤–æ"
    elif player["fertilizer_baff"] == 'warm':
        consequences += "\n‚òÄÔ∏è–î–æ–±—Ä–∏–≤–æ"

    if player["day_temperature"] == 3 or player["day_humidity"] == 3:
        await callback_query.message.edit_text('–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.')
        end_game(player)
        return

    save_player(player)


    await callback_query.message.edit_text(f'{text}.\n–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤ –∑ –∫–ª—ñ—Ç–∏–Ω–∫–∏: {player["cell_fruits"]}.\n'
                                           f'–í–æ–ª–æ–≥—ñ—Å—Ç—å –¥–æ—Ä—ñ–≤–Ω—é—î {player["humidity"]}%.\n'
                                        f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["temperature"]}¬∞C\n{player["size_cell"]}\n{consequences}\n'
                                        f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                        f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>.\n'
                                        f'–û–±–µ—Ä–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –¥–ª—è —Å–≤–æ–≥–æ –≥–æ—Ä–æ–¥—É:', parse_mode=ParseMode.HTML, reply_markup=kb.upgrade)

@router.callback_query(lambda c: c.data == 'Expansion')
async def Expansion(callback_query: CallbackQuery):
    await callback_query.answer()

    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    if player["size_cell"].shape[0] == 10:
        await callback_query.message.edit_text('–í–∞—à–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å, –±—ñ–ª—å—à–µ —Ä–æ–∑—à–∏—Ä—è—Ç–∏—Å—å –Ω–µ –≤–∏–π–¥–µ. –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–µ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è', reply_markup=kb.upgrade)
        return

    player["size_cell"] -= 1

    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    rand_num = random.randint(1, 40)
    if rand_num == 1 or rand_num == 2:
        app = 'üï≥–ü—ñ–¥ —á–∞—Å –≤–∏–∫–æ–ø—É–≤–∞–Ω–Ω—è —è–º–æ–∫ –≤–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –≤ –ø–µ—á–µ—Ä—É. –í–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–∞–º–∞–≥–∞—é—á–∏—Å—å –≤–∏–±—Ä–∞—Ç–∏—Å—å –∑ –Ω–µ—ó. –¶—è –∫–ª—ñ—Ç–∏–Ω–∫–∞ –≤—Ç—Ä–∞—á–µ–Ω–∞'
        new_row = np.array([[10, 10, -10]])
        player["humidity"] -= 10
        player["size_cell"] += 1
    elif rand_num == 3:
        app = 'ü™®–í–∏ —Ä–æ–∑—É–º—ñ—î—Ç–µ —â–æ –Ω–∞ —Ü—ñ–π —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –±–∞–≥–∞—Ç–æ –∫–∞–º—ñ–Ω–Ω—è. –ö—É–ª—å—Ç—É—Ä–∏ –±—É–¥—É—Ç—å —Ä–æ—Å—Ç–∏ –¥–æ–≤—à–µ'
        new_row = np.array([[15, 15, 15]])
    else:
        new_row = np.array([[10, 10, 10]])
        app = ''


    player["size_cell"] = np.vstack([player["size_cell"], new_row])
    player["humidity"] -= 10

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'{app}\n'
                                           f'–¢–≤—ñ–π –≥–æ—Ä–æ–¥ –∑–±—ñ–ª—å—à–µ–Ω–æ –¥–æ \n{player["size_cell"]}\n\n'
                                        f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
                                           f'–í–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%.\n'
                                        f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                           f'–ó –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                           f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

@router.callback_query(lambda c: c.data == 'Fertilization')
async def Fertilization(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    fert_text = ""

    match player["fertilizer_baff"]:
        case "standart":
            player["cell_fruits"] += 1
            fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥'
        case "freeze":
            player["cell_fruits"] += 1
            player["temperature"] -= 5
            fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–º–µ–Ω—à–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 5¬∞C'
        case "warm":
            player["cell_fruits"] += 1
            player["temperature"] += 5
            fert_text = '–¢–∏ —É–¥–æ–±—Ä–∏–≤ –æ–≥–æ—Ä–æ–¥ —Ç–∞ –∑–º–µ–Ω—à–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É “ë—Ä—É–Ω—Ç—É –Ω–∞ 5¬∞C'

    player["size_cell"] -= 1
    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    player["cell_fruits"] += 1
    player["cell_fruits"] = round(player["cell_fruits"])
    player["humidity"] -= 10

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'{fert_text}. –¢–µ–ø–µ—Ä –∑ –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                        f'üìÜ–î–µ–Ω—å {player["day"]} –∑–∞–∫—ñ–Ω—á–µ–Ω–æ.\n'
                                           f'–í–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%.\n'
                                        f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                           f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                           f'–†–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å \n{player["size_cell"]}.\n\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

@router.callback_query(lambda c: c.data == 'Watering')
async def Watering(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    player = get_player(user_id)

    if not player:
        add_player(user_id)
        player = get_player(user_id)

    player["size_cell"] -= 1
    if np.any(player["size_cell"] == 0):
        player["fruits"] = player["cell_fruits"] * player["size_cell"].size
        round(player["fruits"], 0)
        player["size_cell"][player["size_cell"] == 0] = 10
    player["humidity"] += 30
    player["humidity"] -= 10
    player["temperature"] -= 3

    player["day"] += 1

    save_player(player)

    await callback_query.message.edit_text(f'–¢–∏ –ø–æ–ª–∏–≤ –æ–≥–æ—Ä–æ–¥. –¢–µ–ø–µ—Ä –≤–æ–ª–æ–≥—ñ—Å—Ç—å “ë—Ä—É–Ω—Ç—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å {player["humidity"]}%. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–º–µ–Ω—à–µ–Ω–∞ –Ω–∞ 3¬∞C.\n'
                                        f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {player["temperature"]}¬∞C.\n'
                                           f'–ó –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤–∏–π–¥–µ {player["cell_fruits"]} –ø–ª–æ–¥—ñ–≤.\n'
                                           f'–í–∞—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–ª–æ–¥—ñ–≤: {player["fruits"]}.\n'
                                           f'–†–æ–∑–º—ñ—Ä –≥–æ—Ä–æ–¥—É: \n{player["size_cell"]}.\n\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: <b>{player["day_temperature"]}</b>.\n'
                                           f'üíÄ–û—á–∫–∏ —Å–º–µ—Ä—Ç—ñ —á–µ—Ä–µ–∑ –≤–æ–ª–æ–≥—ñ—Å—Ç—å: <b>{player["day_humidity"]}</b>', reply_markup=kb.next_day, parse_mode=ParseMode.HTML)

